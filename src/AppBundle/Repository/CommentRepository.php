<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Comment;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\Query;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{

    public function __construct(EntityManager $em, Mapping\ClassMetadata $class)
    {
        parent::__construct($em, $class);
    }

    public function getCommentsByBlogId($blog_id) {

        $em = $this->getEntityManager();
        $comments = $em->createQueryBuilder()->select('c')->addSelect('u')
            ->from(Comment::class, 'c')
            ->join('c.users', 'u', 'u.id = c.user_id')
            ->where('c.blogId = :blog_id')
            ->setParameter('blog_id', $blog_id)
            ->orderBy('c.id', 'DESC')
            ->getQuery()
            ->getResult(Query::HYDRATE_ARRAY);
        return $comments;
    }

    public function approveComment($comment_id) {
        $em = $this->getEntityManager();
        $comment = $em->getRepository(Comment::class)->find($comment_id);

        if(!$comment) {
            return false;
        }

        $comment->setIsApproved(true);
        $em->persist($comment);
        $em->flush();

        return true;
    }

    public function deleteCommentsForBlog($blog_id) {

        $em = $this->getEntityManager();
        $comment = $em->getRepository(Comment::class)->findBy(['blogId' => $blog_id]);

        if(isset($comment)) {
            foreach ($comment as $comment_item) {
                $em->remove($comment_item);
            }
            $em->flush($comment);
        }
        return true;
    }
}
